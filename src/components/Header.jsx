import React, { useState, useRef, useEffect } from 'react';import { FiMoon, FiSun, FiMenu, FiX } from 'react-icons/fi';import { motion, AnimatePresence } from 'framer-motion';import styles from '../styles/Header.module.css';const navItems = [  { id: 'about', label: 'About' },  { id: 'projects', label: 'Projects' },  { id: 'contact', label: 'Contact' }];const Header = () => {  const [darkMode, setDarkMode] = useState(false);  const [scrolled, setScrolled] = useState(false);  const [activeLink, setActiveLink] = useState('');  const [isMenuOpen, setIsMenuOpen] = useState(false);  // New state for mobile menu  // Handle scroll and active link  useEffect(() => {    const handleScroll = () => {      setScrolled(window.scrollY > 10);      const sections = ['about', 'projects', 'contact'];      for (const section of sections) {        const el = document.getElementById(section);        if (el) {          const rect = el.getBoundingClientRect();          if (rect.top <= 100 && rect.bottom >= 100) {            setActiveLink(section);          }        }      }    };    window.addEventListener('scroll', handleScroll);    return () => window.removeEventListener('scroll', handleScroll);  }, []);  // Handle dark mode toggle  const toggleDarkMode = () => {    setDarkMode((prev) => !prev);    document.documentElement.classList.toggle('dark');  };  // Function to toggle the mobile menu  const toggleMenu = () => {    setIsMenuOpen(!isMenuOpen);  };  return (    <header className={`      ${styles.header}      ${darkMode ? styles.dark : ''}      ${scrolled ? styles.scrolled : ''}    `}>      <div className={styles.header__container}>        <motion.h1          className={styles.header__title}          initial={{ opacity: 0, y: -40, scale: 0.95 }}          animate={{ opacity: 1, y: 0, scale: 1 }}          transition={{ duration: 0.7, ease: 'easeOut' }}        >          <span className={styles.gradientText}>Extacia Fakero</span>        </motion.h1>        {/* Mobile Menu Toggle Button */}        <button className={styles.menuToggleButton} onClick={toggleMenu} aria-label="Toggle navigation menu">          {isMenuOpen ? <FiX /> : <FiMenu />}        </button>        <nav className={`${styles.header__nav} ${isMenuOpen ? styles.navOpen : ''}`} aria-label="Main navigation">          {navItems.map((item, idx) => (            <motion.a              key={item.id}              href={`#${item.id}`}              className={`                ${styles.header__link}                ${activeLink === item.id ? styles.active : ''}              `}              initial={{ opacity: 0, y: -20 }}              animate={{ opacity: 1, y: 0 }}              transition={{ duration: 0.5, delay: 0.3 + idx * 0.1 }}              onClick={() => {                setActiveLink(item.id);                setIsMenuOpen(false); // Close the menu after clicking a link              }}              tabIndex={0}              aria-current={activeLink === item.id ? 'page' : undefined}            >              {item.label}              <span className={styles.link__underline}></span>            </motion.a>          ))}          <motion.button            onClick={toggleDarkMode}            className={styles.header__themeToggle}            aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}            initial={{ opacity: 0, rotate: -90 }}            animate={{ opacity: 1, rotate: 0 }}            transition={{ duration: 0.5, delay: 0.7 }}            whileHover={{ scale: 1.15, rotate: 10 }}            whileTap={{ scale: 0.95 }}          >            <AnimatePresence mode="wait">              {darkMode ? (                <motion.span                  key="sun"                  initial={{ opacity: 0, rotate: -90 }}                  animate={{ opacity: 1, rotate: 0 }}                  exit={{ opacity: 0, rotate: 90 }}                  transition={{ duration: 0.3 }}                >                  <FiSun className={styles.theme__icon} />                </motion.span>              ) : (                <motion.span                  key="moon"                  initial={{ opacity: 0, rotate: 90 }}                  animate={{ opacity: 1, rotate: 0 }}                  exit={{ opacity: 0, rotate: -90 }}                  transition={{ duration: 0.3 }}                >                  <FiMoon className={styles.theme__icon} />                </motion.span>              )}            </AnimatePresence>          </motion.button>        </nav>      </div>    </header>  );};export default Header;